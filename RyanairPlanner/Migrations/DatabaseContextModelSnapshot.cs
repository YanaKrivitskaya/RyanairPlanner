// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RyanairPlanner.EFCore;

namespace RyanairPlanner.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RyanairPlanner.Models.AirportModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Base");

                    b.Property<string>("CityCode");

                    b.Property<string>("CountryCode");

                    b.Property<string>("CurrencyCode");

                    b.Property<string>("IataCode");

                    b.Property<string>("Latitude");

                    b.Property<string>("Longitude");

                    b.Property<string>("Name");

                    b.Property<string>("Priority");

                    b.Property<string>("RegionCode");

                    b.Property<string>("SeoName");

                    b.HasKey("Id");

                    b.ToTable("Airports");
                });

            modelBuilder.Entity("RyanairPlanner.Models.RouteModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AirportFrom");

                    b.Property<string>("AirportTo");

                    b.Property<string>("CarrierCode");

                    b.Property<string>("ConnectingAirport");

                    b.Property<string>("Group");

                    b.Property<bool>("NewRoute");

                    b.Property<string>("Operator");

                    b.Property<bool>("SeasonalRoute");

                    b.HasKey("Id");

                    b.ToTable("Routes");
                });
#pragma warning restore 612, 618
        }
    }
}
